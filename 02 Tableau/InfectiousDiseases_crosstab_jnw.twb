<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.1'>
      <aliases enabled='yes' />
      <column caption='KPI Very Low Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
      </column>
      <column caption='KPI Low Value' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
      <column caption='KPI Medium Value' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='11.0'>
        <calculation class='tableau' formula='11.0' />
        <range granularity='1.0' max='100.0' min='11.0' />
      </column>
    </datasource>
    <datasource caption='INFECTIOUS_DISEASES (CS329E_JNW653) Extract' inline='true' name='dataengine.42302.751760810184' version='9.1'>
      <connection class='dataengine' dbname='C:\Users\jenna_000\Jennas_Stuff\UT\DataVisualization\DV_TProject1\01 Data\INFECTIOUS_DISEASES (CS329E_JNW653).tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CI_LOWER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_LOWER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CI_LOWER</remote-alias>
            <ordinal>0</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12700</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>992.00699999999995</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CI_UPPER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_UPPER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CI_UPPER</remote-alias>
            <ordinal>1</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19117</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.01</statistic>
              <statistic aggregation='Max' datatype='real'>1632.9659999999999</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>2</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>59</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuba&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNT</remote-alias>
            <ordinal>3</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2041</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>174557.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISEASE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISEASE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DISEASE</remote-alias>
            <ordinal>4</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>65</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Amebiasis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yersiniosis&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPULATION</remote-name>
            <remote-type>5</remote-type>
            <local-name>[POPULATION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>POPULATION</remote-alias>
            <ordinal>6</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2459</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>533.0</statistic>
              <statistic aggregation='Max' datatype='real'>38501494.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RATE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>RATE</remote-alias>
            <ordinal>7</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>15352</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1020.55</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>8</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Total&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;Male&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNSTABLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNSTABLE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>UNSTABLE</remote-alias>
            <ordinal>9</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;-&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>4</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>10</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>2001.0</statistic>
              <statistic aggregation='Max' datatype='real'>2014.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ci Lower' datatype='real' name='[CI_LOWER]' role='measure' type='quantitative' />
      <column caption='Ci Upper' datatype='real' name='[CI_UPPER]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
      <column caption='Calculated Count KPI' datatype='string' name='[Calculation_764486048834826240]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [COUNT] == [Parameters].[Parameter 1] then &apos;Very Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 2] then &apos;Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 3] then &apos;Medium&apos;&#13;&#10;else &apos;High&apos;&#13;&#10;end' />
      </column>
      <column caption='Disease' datatype='string' name='[DISEASE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population' datatype='real' name='[POPULATION]' role='measure' type='quantitative' />
      <column caption='Rate' datatype='real' name='[RATE]' role='measure' type='quantitative' />
      <column caption='Unstable' datatype='string' name='[UNSTABLE]' role='dimension' type='nominal' />
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_764486048834826240]' derivation='None' name='[none:Calculation_764486048834826240:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.337931' measure-ordering='alphabetic' measure-percentage='0.365517' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_764486048834826240:nk]' type='palette'>
            <map to='#1c5f9e'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#3583b6'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
            <map to='#6fb8d9'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Very Low&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Very Low Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
        </column>
        <column caption='KPI Low Value' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
        <column caption='KPI Medium Value' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='11.0'>
          <calculation class='tableau' formula='11.0' />
          <range granularity='1.0' max='100.0' min='11.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 1' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Calculated Count KPI' />
        <param name='target' value='Sheet 1' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Calculated Count KPI' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='INFECTIOUS_DISEASES (CS329E_JNW653) Extract' name='dataengine.42302.751760810184' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Very Low Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
            </column>
            <column caption='KPI Low Value' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
            <column caption='KPI Medium Value' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='11.0'>
              <calculation class='tableau' formula='11.0' />
              <range granularity='1.0' max='100.0' min='11.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42302.751760810184'>
            <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column caption='Calculated Count KPI' datatype='string' name='[Calculation_764486048834826240]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [COUNT] == [Parameters].[Parameter 1] then &apos;Very Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 2] then &apos;Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 3] then &apos;Medium&apos;&#13;&#10;else &apos;High&apos;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[SEX]' role='dimension' type='nominal' />
            <column-instance column='[COUNT]' derivation='Avg' name='[avg:COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_764486048834826240]' derivation='None' name='[none:Calculation_764486048834826240:nk]' pivot='key' type='nominal' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[dataengine.42302.751760810184].[none:Calculation_764486048834826240:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Very Low&quot;</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42302.751760810184].[none:Calculation_764486048834826240:nk]' />
              <text column='[dataengine.42302.751760810184].[avg:COUNT:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42302.751760810184].[none:COUNTY:nk]</rows>
        <cols>[dataengine.42302.751760810184].[none:SEX:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 1' show-title='true' w='84000' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='13375' id='6' name='Sheet 1' pane-specification-id='0' param='[dataengine.42302.751760810184].[none:Calculation_764486048834826240:nk]' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42302.751760810184].[none:Calculation_764486048834826240:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42302.751760810184].[none:COUNTY:nk]</field>
          <field>[dataengine.42302.751760810184].[none:SEX:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <zones>
        <zone name='Sheet 1' pane-specification-id='0' param='[dataengine.42302.751760810184].[none:Calculation_764486048834826240:nk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      IEqiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      y5lsJoj8AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
