<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.1'>
      <aliases enabled='yes' />
      <column caption='KPI Very Low Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
      </column>
      <column caption='KPI Low Value' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
      <column caption='KPI Medium Value' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='11.0'>
        <calculation class='tableau' formula='11.0' />
        <range granularity='1.0' max='100.0' min='11.0' />
      </column>
    </datasource>
    <datasource caption='INFECTIOUS_DISEASES (CS329E_JNW653) Extract' inline='true' name='dataengine.42302.696036967594' version='9.1'>
      <connection class='dataengine' dbname='C:\Users\jenna_000\Jennas_Stuff\UT\DataVisualization\DV_TProject1\01 Data\INFECTIOUS_DISEASES (CS329E_JNW653).tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CI_LOWER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_LOWER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CI_LOWER</remote-alias>
            <ordinal>0</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12700</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>992.00699999999995</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CI_UPPER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_UPPER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CI_UPPER</remote-alias>
            <ordinal>1</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19117</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.01</statistic>
              <statistic aggregation='Max' datatype='real'>1632.9659999999999</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>2</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>59</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuba&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNT</remote-alias>
            <ordinal>3</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2041</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>174557.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISEASE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISEASE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DISEASE</remote-alias>
            <ordinal>4</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>65</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Amebiasis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yersiniosis&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPULATION</remote-name>
            <remote-type>5</remote-type>
            <local-name>[POPULATION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>POPULATION</remote-alias>
            <ordinal>6</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2459</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>533.0</statistic>
              <statistic aggregation='Max' datatype='real'>38501494.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RATE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>RATE</remote-alias>
            <ordinal>7</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>15352</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1020.55</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>8</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Total&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;Male&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNSTABLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNSTABLE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>UNSTABLE</remote-alias>
            <ordinal>9</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;-&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>4</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>10</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>2001.0</statistic>
              <statistic aggregation='Max' datatype='real'>2014.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ci Lower' datatype='real' name='[CI_LOWER]' role='measure' type='quantitative' />
      <column caption='Ci Upper' datatype='real' name='[CI_UPPER]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
      <column caption='Calculated Count KPI' datatype='string' name='[Calculation_764486048834826240]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [COUNT] == [Parameters].[Parameter 1] then &apos;Very Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 2] then &apos;Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 3] then &apos;Medium&apos;&#13;&#10;else &apos;High&apos;&#13;&#10;end' />
      </column>
      <column caption='Disease' datatype='string' name='[DISEASE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population' datatype='real' name='[POPULATION]' role='measure' type='quantitative' />
      <column caption='Rate' datatype='real' name='[RATE]' role='measure' type='quantitative' />
      <column caption='Unstable' datatype='string' name='[UNSTABLE]' role='dimension' type='nominal' />
      <column caption='Year' datatype='real' name='[YEAR]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_764486048834826240]' derivation='None' name='[none:Calculation_764486048834826240:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.336207' measure-ordering='alphabetic' measure-percentage='0.381034' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_764486048834826240:nk]' type='palette'>
            <map to='#1c5f9e'>
              <bucket>&quot;High&quot;</bucket>
            </map>
            <map to='#3583b6'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
            <map to='#6fb8d9'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Very Low&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Very Low Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
        </column>
        <column caption='KPI Low Value' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
        <column caption='KPI Medium Value' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='11.0'>
          <calculation class='tableau' formula='11.0' />
          <range granularity='1.0' max='100.0' min='11.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='INFECTIOUS_DISEASES (CS329E_JNW653) Extract' name='dataengine.42302.696036967594' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Very Low Value' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
            </column>
            <column caption='KPI Low Value' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
              <range granularity='1.0' max='10.0' min='1.0' />
            </column>
            <column caption='KPI Medium Value' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='11.0'>
              <calculation class='tableau' formula='11.0' />
              <range granularity='1.0' max='100.0' min='11.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42302.696036967594'>
            <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column caption='Calculated Count KPI' datatype='string' name='[Calculation_764486048834826240]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [COUNT] == [Parameters].[Parameter 1] then &apos;Very Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 2] then &apos;Low&apos;&#13;&#10;elseif [COUNT] &lt;= [Parameters].[Parameter 3] then &apos;Medium&apos;&#13;&#10;else &apos;High&apos;&#13;&#10;end' />
            </column>
            <column caption='Disease' datatype='string' name='[DISEASE]' role='dimension' type='nominal' />
            <column-instance column='[COUNT]' derivation='Avg' name='[avg:COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTY]' derivation='None' name='[none:COUNTY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_764486048834826240]' derivation='None' name='[none:Calculation_764486048834826240:nk]' pivot='key' type='nominal' />
            <column-instance column='[DISEASE]' derivation='None' name='[none:DISEASE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42302.696036967594].[none:COUNTY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alameda&quot;' function='range' level='[none:COUNTY:nk]' to='&quot;Calaveras&quot;' />
              <groupfilter from='&quot;Colusa&quot;' function='range' level='[none:COUNTY:nk]' to='&quot;Yuba&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42302.696036967594].[none:Calculation_764486048834826240:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High&quot;</bucket>
              <bucket>&quot;Medium&quot;</bucket>
              <bucket>&quot;Low&quot;</bucket>
              <bucket>&quot;Very Low&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42302.696036967594].[none:DISEASE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Chlamydia&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Dengue&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Gonorrhea&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;HIV&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Influenza Death (&lt;65 years of age)&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Lyme Disease&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Malaria&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Measles&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Mumps&quot;' />
              <groupfilter function='member' level='[none:DISEASE:nk]' member='&quot;Tuberculosis&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.42302.696036967594].[none:DISEASE:nk]</column>
            <column>[dataengine.42302.696036967594].[none:COUNTY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[dataengine.42302.696036967594].[none:DISEASE:nk]' value='80' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42302.696036967594].[none:COUNTY:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42302.696036967594].[none:Calculation_764486048834826240:nk]' />
              <text column='[dataengine.42302.696036967594].[avg:COUNT:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42302.696036967594].[none:COUNTY:nk]</rows>
        <cols>[dataengine.42302.696036967594].[none:DISEASE:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='961' h='100000' id='1' is-fixed='true' name='Sheet 1' w='81082' x='0' y='0'>
                  <layout-cache fixed-size-h='1201' type-h='fixed' type-w='fixed' />
                </zone>
                <zone h='100000' id='6' name='Sheet 1' pane-specification-id='0' param='[dataengine.42302.696036967594].[none:Calculation_764486048834826240:nk]' type='color' w='13999' x='81082' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42302.696036967594].[none:Calculation_764486048834826240:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42302.696036967594].[none:COUNTY:nk]</field>
          <field>[dataengine.42302.696036967594].[none:DISEASE:nk]</field>
          <field>[dataengine.42302.696036967594].[none:SEX:nk]</field>
          <field>[dataengine.42302.696036967594].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <active id='1' />
      <zones>
        <zone name='Sheet 1' pane-specification-id='0' param='[dataengine.42302.696036967594].[none:Calculation_764486048834826240:nk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
