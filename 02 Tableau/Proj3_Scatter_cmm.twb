<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='mac' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='INFECTIOUS_DISEASES Extract' inline='true' name='dataengine.42305.839219421294' version='9.1'>
      <connection class='dataengine' dbname='/Users/Chuckmode/DataVisualization/DrCannata/DV_RProject4/01 Data/INFECTIOUS_DISEASES (CS329E_JNW653).tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CI_LOWER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_LOWER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CI_LOWER</remote-alias>
            <ordinal>0</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12700</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>992.00699999999995</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CI_UPPER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_UPPER]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CI_UPPER</remote-alias>
            <ordinal>1</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19117</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.01</statistic>
              <statistic aggregation='Max' datatype='real'>1632.9659999999999</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>2</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>59</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuba&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNT</remote-name>
            <remote-type>4</remote-type>
            <local-name>[COUNT]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>COUNT</remote-alias>
            <ordinal>3</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2041</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>174557.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISEASE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISEASE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DISEASE</remote-alias>
            <ordinal>4</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>65</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Amebiasis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yersiniosis&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPULATION</remote-name>
            <remote-type>5</remote-type>
            <local-name>[POPULATION]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>POPULATION</remote-alias>
            <ordinal>6</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2459</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>533.0</statistic>
              <statistic aggregation='Max' datatype='real'>38501494.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RATE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RATE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>RATE</remote-alias>
            <ordinal>7</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>15352</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>1020.55</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>8</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Total&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;Male&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNSTABLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNSTABLE]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>UNSTABLE</remote-alias>
            <ordinal>9</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>4000</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot; &quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;-&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>4</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>10</ordinal>
            <family>INFECTIOUS_DISEASES</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>2001.0</statistic>
              <statistic aggregation='Max' datatype='real'>2014.0</statistic>
              <statistic aggregation='Count' datatype='integer'>141777</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ci Lower' datatype='real' name='[CI_LOWER]' role='measure' type='quantitative' />
      <column caption='Ci Upper' datatype='real' name='[CI_UPPER]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[COUNTY]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
      <column caption='County2' datatype='boolean' name='[Calculation_37013972719009792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[COUNTY] != &quot;California&quot;' />
      </column>
      <column caption='SEX2' datatype='boolean' name='[Calculation_37013972723912705]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[SEX] != &quot;Total&quot;' />
      </column>
      <column caption='Disease' datatype='string' name='[DISEASE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Population' datatype='real' name='[POPULATION]' role='measure' type='quantitative' />
      <column caption='Rate' datatype='real' name='[RATE]' role='measure' type='quantitative' />
      <column datatype='string' name='[SEX]' role='dimension' type='nominal' />
      <column caption='Unstable' datatype='string' name='[UNSTABLE]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[YEAR]' role='measure' type='quantitative' />
      <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:SEX:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='INFECTIOUS_DISEASES Extract' name='dataengine.42305.839219421294' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42305.839219421294'>
            <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column datatype='string' name='[SEX]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[YEAR]' role='measure' type='quantitative' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNT]' derivation='Sum' name='[sum:COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42305.839219421294].[none:SEX:nk]'>
            <groupfilter from='&quot;Female&quot;' function='range' level='[none:SEX:nk]' to='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42305.839219421294].[none:SEX:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[dataengine.42305.839219421294].[sum:COUNT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42305.839219421294].[sum:COUNT:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[dataengine.42305.839219421294].[none:SEX:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42305.839219421294].[sum:COUNT:qk]</rows>
        <cols>[dataengine.42305.839219421294].[none:YEAR:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='INFECTIOUS_DISEASES Extract' name='dataengine.42305.839219421294' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42305.839219421294'>
            <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column datatype='string' name='[SEX]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[YEAR]' role='measure' type='quantitative' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNT]' derivation='Sum' name='[sum:COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42305.839219421294].[none:SEX:nk]'>
            <groupfilter from='&quot;Female&quot;' function='range' level='[none:SEX:nk]' to='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42305.839219421294].[none:SEX:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[dataengine.42305.839219421294].[none:SEX:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[dataengine.42305.839219421294].[sum:COUNT:qk]</rows>
        <cols>[dataengine.42305.839219421294].[none:YEAR:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='INFECTIOUS_DISEASES Extract' name='dataengine.42305.839219421294' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42305.839219421294'>
            <column caption='Count' datatype='real' name='[COUNT]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[POPULATION]' role='measure' type='quantitative' />
            <column datatype='string' name='[SEX]' role='dimension' type='nominal' />
            <column-instance column='[SEX]' derivation='None' name='[none:SEX:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNT]' derivation='Sum' name='[sum:COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[POPULATION]' derivation='Sum' name='[sum:POPULATION:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42305.839219421294].[none:SEX:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[dataengine.42305.839219421294].[sum:COUNT:qk]</rows>
        <cols>[dataengine.42305.839219421294].[sum:POPULATION:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='165'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42305.839219421294].[none:SEX:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42305.839219421294].[none:COUNTY:nk]</field>
          <field>[dataengine.42305.839219421294].[none:Calculation_37013972719009792:nk]</field>
          <field>[dataengine.42305.839219421294].[none:Calculation_37013972723912705:nk]</field>
          <field>[dataengine.42305.839219421294].[none:DISEASE:nk]</field>
          <field>[dataengine.42305.839219421294].[none:SEX:nk]</field>
          <field>[dataengine.42305.839219421294].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42305.839219421294].[none:SEX:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42305.839219421294].[none:SEX:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42305.839219421294].[none:SEX:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42305.839219421294].[none:SEX:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      P3v3ElX/5s8JAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Ulb1jgnY/w8fFYsG3hso7QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
